<Application x:Class="POS.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:POS"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <!--#region Fonts-->

            <!--<FontFamily x:Key="Font-Cairo-Bold_0">pack://application:,,,/Fonts/#Noto Sans</FontFamily>-->
            <!--<FontFamily x:Key="FontTest" >/Cairo-Black;Component/Fonts/#Cairo-Black</FontFamily>
            <FontFamily x:Key="FontTest2" >/Cairo-Bold_0;Component/Fonts/#Cairo-Bold_0 </FontFamily>-->
            <!--value="/MyAssembly;Component/Fonts/#FontAwesome" />-->

            <FontFamily x:Key="Font-NotoKufiArabic-Bold" >Noto Kufi Arabic, /POS;component/fonts/NotoKufiArabic/#NotoKufiArabic-Bold</FontFamily>
            <FontFamily x:Key="Font-NotoKufiArabic-Regular" >Noto Kufi Arabic, /POS;component/fonts/NotoKufiArabic/#NotoKufiArabic-Regular</FontFamily>

            <FontFamily x:Key="Font-cairo-light" >cairo light, /POS;component/fonts/cairo-font/#cairo light, Arial</FontFamily>
            <FontFamily x:Key="Font-cairo-bold" >cairo bold , /POS;component/fonts/cairo-font/#cairo bold, Arial</FontFamily>


            <FontFamily x:Key="Font-SF-Pro-Display-Light" >SF Pro Display, /POS;component/fonts/en-fonts/#SF-Pro-Display-Light</FontFamily>
            <FontFamily x:Key="Font-SF-Pro-Display-Medium" >SF-Pro-Display , /POS;component/fonts/en-fonts/#SF-Pro-Display-Medium</FontFamily>
            <FontFamily x:Key="Font-SF-Pro-Display-Regular" >SF-Pro-Display , /POS;component/fonts/en-fonts/#SF-Pro-Display-Regular</FontFamily>
            <FontFamily x:Key="Font-sf-ui-display-bold" >SF-UI-Display  /POS;component/fonts/en-fonts/#sf-ui-display-bold</FontFamily>
                                                                             
            <!--#endregion-->
          
            <Style x:Key="BigButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Height="195" x:Name="grid" Background="#00FFFFFF"  >
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontSize)" Storyboard.TargetName="TXT_Contain">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="21"/>
                                            </DoubleAnimationUsingKeyFrames>-->
                                                <DoubleAnimation Duration="0:0:0.2" To="67.5" Storyboard.TargetProperty="Height" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0:0:0.2" To="67.5" Storyboard.TargetProperty="Width" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0" To="0.95" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.3" To="#35B5FF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="TXT_Contain"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontSize)" Storyboard.TargetName="TXT_Contain">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="22"/>
                                            </DoubleAnimationUsingKeyFrames>-->
                                                <DoubleAnimation Duration="0:0:0.6" To="66" Storyboard.TargetProperty="Height" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0:0:0.6" To="66" Storyboard.TargetProperty="Width" Storyboard.TargetName="X" />
                                                <ColorAnimation Duration="0:0:0.5" To="#66C6FF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="TXT_Contain"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1.5*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Rectangle  Grid.RowSpan="3"  Stretch="Fill" 
                       Width="{Binding ActualWidth, ElementName=Grid1}"
                       Height="{Binding ActualHeight, ElementName=Grid1}"
             RadiusY="30" RadiusX="30"
                                           Fill="{TemplateBinding Background}" x:Name="rectangle"
                                            Opacity="1">
                                    <!--StrokeThickness="2">-->
                                    <!--<Rectangle.Stroke>
                                       <LinearGradientBrush EndPoint="0.7,1" StartPoint="0,0">
                                            <GradientStop Color="#00000000" Offset="0.6"/>
                                            <GradientStop Color="#CCC3C3C3" Offset="1"/>    
                                        </LinearGradientBrush>
                                    </Rectangle.Stroke>-->
                                    <Rectangle.Effect>
                                        <DropShadowEffect Color="#d7d7d7" BlurRadius="7" Direction="-90" RenderingBias="Quality" ShadowDepth="0.1" />
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Path  Margin="5,10"  Fill="#67686D"  Stretch="Fill" 
              HorizontalAlignment="Center"  VerticalAlignment="Bottom" Height="65" Width="65"
                                       x:Name="X"  Data="{Binding}" />
                                <ContentPresenter Margin="5,10"  Grid.Row="1"   HorizontalAlignment="Center" 
               VerticalAlignment="Top"  x:Name="TXT_Contain" TextBlock.FontFamily="{StaticResource Font-cairo-bold}"
                                                  TextBlock.Foreground="#67686D" TextBlock.FontSize="20"    ContentSource="Content"/>

                                <!--<TextBlock Foreground="White" FontSize="16" TextBlock.FontFamily="{StaticResource MyFontFamily}"  HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="10">إضافة شخص</TextBlock>-->
                                <!--<ContentPresenter Grid.Row="1" x:Name="TXT_Contain"  Margin="00" VerticalAlignment="Bottom" HorizontalAlignment="Center" TextBlock.Foreground="White" TextBlock.FontSize="20"    ContentSource="Content"></ContentPresenter>-->
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" To="200" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.2" To="200" Storyboard.TargetProperty="Width" />
                                                <DoubleAnimation Duration="0:0:0.5" To="197.5" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.5" To="197.5" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="195" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="195" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SmallButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Height="75" x:Name="grid" Background="#00FFFFFF"  >
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontSize)" Storyboard.TargetName="TXT_Contain">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="21"/>
                                            </DoubleAnimationUsingKeyFrames>-->
                                                <DoubleAnimation Duration="0:0:0.2" To="32.5" Storyboard.TargetProperty="Height" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0:0:0.2" To="32.5" Storyboard.TargetProperty="Width" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0" To="0.95" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.3" To="#178DD2" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="TXT_Contain"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontSize)" Storyboard.TargetName="TXT_Contain">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="22"/>
                                            </DoubleAnimationUsingKeyFrames>-->
                                                <DoubleAnimation Duration="0:0:0.6" To="31" Storyboard.TargetProperty="Height" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0:0:0.6" To="31" Storyboard.TargetProperty="Width" Storyboard.TargetName="X" />
                                                <ColorAnimation Duration="0:0:0.5" To="#66C6FF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="TXT_Contain"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1.2*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Rectangle  Grid.RowSpan="3"  Stretch="Fill" 
                       Width="{Binding ActualWidth, ElementName=Grid1}"
                       Height="{Binding ActualHeight, ElementName=Grid1}"
             RadiusY="10" RadiusX="10"
                                           Fill="{TemplateBinding Background}" x:Name="rectangle"
                                            Opacity="1">
                                    <!--StrokeThickness="2">-->
                                    <!--<Rectangle.Stroke>
                                       <LinearGradientBrush EndPoint="0.7,1" StartPoint="0,0">
                                            <GradientStop Color="#00000000" Offset="0.6"/>
                                            <GradientStop Color="#CCC3C3C3" Offset="1"/>    
                                        </LinearGradientBrush>
                                    </Rectangle.Stroke>-->
                                    <Rectangle.Effect>
                                        <DropShadowEffect Color="#d7d7d7" BlurRadius="7" Direction="-90" RenderingBias="Quality" ShadowDepth="0.1" />
                                    </Rectangle.Effect>
                                </Rectangle>
                                <!--Fill="#67686D"-->
                                <Path  Margin="2.5,2.5"  Fill="{TemplateBinding BorderBrush}"  Stretch="Fill" 
              HorizontalAlignment="Center"  VerticalAlignment="Bottom" Height="30" Width="30"
                                       x:Name="X"  Data="{Binding}" />
                                <ContentPresenter Margin="2.5,5"  Grid.Row="1"   HorizontalAlignment="Center" 
               VerticalAlignment="Top"  x:Name="TXT_Contain" TextBlock.FontFamily="{StaticResource Font-cairo-bold}"
                                                  TextBlock.Foreground="{Binding Fill, ElementName=X}" TextBlock.FontSize="12"    ContentSource="Content"/>

                                <!--<TextBlock Foreground="White" FontSize="16" TextBlock.FontFamily="{StaticResource MyFontFamily}"  HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="10">إضافة شخص</TextBlock>-->
                                <!--<ContentPresenter Grid.Row="1" x:Name="TXT_Contain"  Margin="00" VerticalAlignment="Bottom" HorizontalAlignment="Center" TextBlock.Foreground="White" TextBlock.FontSize="20"    ContentSource="Content"></ContentPresenter>-->
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" To="77.5" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.2" To="77.5" Storyboard.TargetProperty="Width" />
                                                <DoubleAnimation Duration="0:0:0.5" To="76" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.5" To="76" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="75" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="75" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SmallButtonCircleRotate" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="grid" Background="#02FFFFFF">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.6" To="27.5" Storyboard.TargetProperty="Height" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0:0:0.6" To="27.5" Storyboard.TargetProperty="Width" Storyboard.TargetName="X" />
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0.95" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="X"/>
                                                <ColorAnimation Duration="0:0:0.6" To="#178DD2"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.3" To="#9CD0EF"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="X"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" RadiusX="15" RadiusY="15" Opacity="1"/>
                                <Path x:Name="X" Margin="0"  Data="{Binding}"
                              Fill="#178DD2" HorizontalAlignment="Center" 
                                      Stretch="Fill" VerticalAlignment="Center" Height="27.5" Width="27.5"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-90"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-360"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <!--<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="Height" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="50"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="55"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="50"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="Width" >
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="50"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="55"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="52.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="50"/>
                                                </DoubleAnimationUsingKeyFrames>-->
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <!--<Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" To="50" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.2" To="50" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>-->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <Style x:Key="ToolTipError" TargetType="{x:Type ToolTip}" BasedOn="{StaticResource {x:Type ToolTip}}">
                <Setter Property="Foreground" Value="Red"/>
                <Setter Property="Background" Value="#15FF0000"/>
            </Style>
                <!--<Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding isActive}" Value="0">
                            <Setter Property="Background" Value="#15FF0000" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>-->
            <Style TargetType="DataGridRow">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding isActive}" Value="0">
                        <!--<Setter Property="Background" Value="#A1A1A1" />-->
                        <Setter Property="TextBlock.TextDecorations" Value="Strikethrough " />
                        <!--<Setter Property="TextBlock.Foreground" Value="White" />-->
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="strikethrough">
                <Setter Property="TextBlock.TextDecorations" Value="Strikethrough " />
            </Style>
            <!--#region ScrollBarTrackThumb--> 

            <Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
                                <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag"
                                Value="Horizontal">
                                    <Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                                    <Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="6" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
                <Setter Property="Foreground"
            Value="#ADABAB" />
                <Setter Property="Background"
            Value="Transparent" />
                <Setter Property="Width"
            Value="7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot"
                        Width="7"
                        Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.00001*" />
                                </Grid.RowDefinitions>
                                <Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
                                    <Setter Value="{DynamicResource ButtonSelectBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                                </Trigger>
                                <Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
                                    <Setter Value="{DynamicResource DarkBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                                </Trigger>

                                <Trigger Property="IsEnabled"
                                Value="false">
                                    <Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation"
                                Value="Horizontal">
                                    <Setter TargetName="GridRoot"
                                Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track"
                                Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width"
                                Value="Auto" />
                                    <Setter Property="Height"
                                Value="8" />
                                    <Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                                    <Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->
            
            <!--#region -->
            <Geometry x:Key="StarIconGeometry" > M179.7,357.6c0.8-4.9,1.5-9.2,2.3-13.5c3.6-20.9,7.2-41.8,10.8-62.7c0.3-1.5-0.3-2.5-1.3-3.4
	c-18.1-17.6-36.3-35.3-54.4-52.9c-0.2-0.2-0.3-0.3-0.7-0.8c2.8-0.5,5.4-0.9,8.1-1.3c22.8-3.3,45.6-6.6,68.4-9.9
	c1.6-0.2,2.2-1.1,2.8-2.3c10.9-22.2,21.9-44.4,32.8-66.6c0.3-0.7,0.7-1.4,1.3-2.4c1.4,2.7,2.6,5.1,3.8,7.5
	c10.1,20.5,20.2,41.1,30.3,61.6c0.7,1.3,1.5,1.9,3,2.2c20,2.9,40.1,5.8,60.1,8.7c5.3,0.8,10.6,1.5,15.9,2.3
	c-3.2,3.4-6.3,6.7-9.6,9.9c-12.3,12-24.6,24-36.9,36c-2.8,2.7-5.6,5.5-8.4,8.1c-1,1-1.4,1.9-1.2,3.3c3.8,21.7,7.5,43.4,11.2,65.1
	c0.6,3.5,1.2,7.1,1.9,11.1c-1.1-0.5-1.9-0.8-2.5-1.2c-21.8-11.5-43.7-22.9-65.5-34.5c-1.5-0.8-2.7-0.8-4.3,0
	c-21.8,11.5-43.6,23-65.5,34.5C181.6,356.7,181,357,179.7,357.6z</Geometry>

            <!--#endregion-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Blue.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
